plugins {
    id 'net.minecraftforge.gradle' version '[6.0.24,6.2)'
}

version = "${minecraft_version}-${mod_version}"
archivesBaseName = "${mod_id}-forge"

java.toolchain.languageVersion = JavaLanguageVersion.of(java_version)

minecraft {
    mappings channel: 'official', version: minecraft_version

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods { improvedvanilla { source sourceSets.main } }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--nogui'

            mods { improvedvanilla { source sourceSets.main } }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    implementation 'org.codehaus.groovy:groovy-json:3.0.16'
}

jar {
    from rootProject.file('LICENSE')
    manifest {
        attributes([
                'Specification-Title'     : mod_name,
                'Specification-Vendor'    : mod_author,
                'Implementation-Title'    : project.name,
                'Implementation-Vendor'   : mod_author,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Timestamp'               : System.currentTimeMillis(),
                'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                'Build-On-Minecraft'      : minecraft_version
        ])
    }
}

jar.finalizedBy('reobfJar')

processResources {
    def expandProps = [
            "version"           : "${minecraft_version}-${mod_version}",
            "version_range"     : version_range,
            "minecraft_version" : minecraft_version,
            "java_version"      : java_version,
            "forge_loader_range": forge_loader_range
    ]

    filesMatching(['META-INF/mods.toml']) {
        expand expandProps
    }
    inputs.properties(expandProps)
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
